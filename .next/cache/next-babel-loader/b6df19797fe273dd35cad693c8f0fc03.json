{"ast":null,"code":"import _defineProperty from \"/Users/gvimlan/Documents/MyPutih-Site/myputih/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/gvimlan/Documents/MyPutih-Site/myputih/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect } from 'react';\nimport L from 'leaflet';\nimport * as ReactLeaflet from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styles from './Map.module.css';\nvar MapContainer = ReactLeaflet.MapContainer;\n\nvar Map = function Map(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\"]);\n\n  var mapClassName = styles.map;\n\n  if (className) {\n    mapClassName = \"\".concat(mapClassName, \" \").concat(className);\n  }\n\n  useEffect(function () {\n    delete L.Icon.Default.prototype._getIconUrl;\n    L.Icon.Default.mergeOptions({\n      iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n      iconUrl: require('leaflet/dist/images/marker-icon.png'),\n      shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n    });\n  }, []);\n  return /*#__PURE__*/_jsx(MapContainer, _objectSpread(_objectSpread({\n    className: mapClassName\n  }, rest), {}, {\n    children: children(ReactLeaflet)\n  }));\n};\n\nexport default Map;","map":null,"metadata":{},"sourceType":"module"}