{"ast":null,"code":"import _defineProperty from \"/Users/gvimlan/Documents/MyPutih-Site/myputih/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/gvimlan/Documents/MyPutih-Site/myputih/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gvimlan/Documents/MyPutih-Site/myputih/components/Map/Map.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect } from 'react';\nimport L from 'leaflet';\nimport * as ReactLeaflet from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styles from './Map.module.css';\nvar MapContainer = ReactLeaflet.MapContainer;\n\nvar Map = function Map(_ref) {\n  _s();\n\n  var children = _ref.children,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\"]);\n\n  var mapClassName = styles.map;\n\n  if (className) {\n    mapClassName = \"\".concat(mapClassName, \" \").concat(className);\n  }\n\n  useEffect(function () {\n    delete L.Icon.Default.prototype._getIconUrl;\n    L.Icon.Default.mergeOptions({\n      iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n      iconUrl: require('leaflet/dist/images/marker-icon.png'),\n      shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, _objectSpread(_objectSpread({\n    className: mapClassName\n  }, rest), {}, {\n    children: children(ReactLeaflet)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/gvimlan/Documents/MyPutih-Site/myputih/components/Map/Map.js"],"names":["useEffect","L","ReactLeaflet","styles","MapContainer","Map","children","className","rest","mapClassName","map","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,KAAKC,YAAZ,MAA8B,eAA9B;AACA,OAAO,0BAAP;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;IAEQC,Y,GAAiBF,Y,CAAjBE,Y;;AAER,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAsC;AAAA;;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAXC,IAAW;;AAChD,MAAIC,YAAY,GAAGN,MAAM,CAACO,GAA1B;;AAEA,MAAKH,SAAL,EAAiB;AACfE,IAAAA,YAAY,aAAMA,YAAN,cAAsBF,SAAtB,CAAZ;AACD;;AAEDP,EAAAA,SAAS,CAAC,YAAM;AACd,WAAOC,CAAC,CAACU,IAAF,CAAOC,OAAP,CAAeC,SAAf,CAAyBC,WAAhC;AAEAb,IAAAA,CAAC,CAACU,IAAF,CAAOC,OAAP,CAAeG,YAAf,CAA4B;AAC1BC,MAAAA,aAAa,EAAEC,OAAO,CAAE,wCAAF,CADI;AAE1BC,MAAAA,OAAO,EAAED,OAAO,CAAE,qCAAF,CAFU;AAG1BE,MAAAA,SAAS,EAAEF,OAAO,CAAE,uCAAF;AAHQ,KAA5B;AAKD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE,QAAC,YAAD;AAAc,IAAA,SAAS,EAAER;AAAzB,KAA2CD,IAA3C;AAAA,cACIF,QAAQ,CAACJ,YAAD;AADZ;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAtBD;;GAAMG,G;;KAAAA,G;AAwBN,eAAeA,GAAf","sourcesContent":["import { useEffect } from 'react';\nimport L from 'leaflet';\nimport * as ReactLeaflet from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nimport styles from './Map.module.css';\n\nconst { MapContainer } = ReactLeaflet;\n\nconst Map = ({ children, className, ...rest }) => {\n  let mapClassName = styles.map;\n\n  if ( className ) {\n    mapClassName = `${mapClassName} ${className}`;\n  }\n\n  useEffect(() => {\n    delete L.Icon.Default.prototype._getIconUrl;\n\n    L.Icon.Default.mergeOptions({\n      iconRetinaUrl: require( 'leaflet/dist/images/marker-icon-2x.png' ),\n      iconUrl: require( 'leaflet/dist/images/marker-icon.png' ),\n      shadowUrl: require( 'leaflet/dist/images/marker-shadow.png' ),\n    });\n  }, []);\n\n  return (\n    <MapContainer className={mapClassName} {...rest}>\n      { children(ReactLeaflet) }\n    </MapContainer>\n  )\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}